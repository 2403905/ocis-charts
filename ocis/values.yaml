# when in local tunnel mode, ingressDomain is the proxy address.
# sadly when in combination with --set, anchors are lost.
ingressDomain: &ingressDomain "https://keycloak.ocis-keycloak.released.owncloud.works"

# base ocis image
image: owncloud/ocis:1.11.0-linux-amd64

# set of ocis services to create deployments objects.
services:
  proxy:
    metadata:
      name: "ocis-proxy"
    labels:
      app: "ocis-proxy"
    matchLabels:
      app: "ocis-proxy"
    args: ["proxy"]
    ports:
      containerPort: 9200
    env:
    - name: "OCIS_LOG_LEVEL"
      value: "debug"
    - name: "PROXY_REVA_GATEWAY_ADDR"
      value: "storages-service:9142"
    - name: "PROXY_OIDC_ISSUER"
      value: "https://keycloak.ocis-keycloak.released.owncloud.works/auth/realms/oCIS"
    - name: "PROXY_ENABLE_BASIC_AUTH"
      value: "'true'" # see https://stackoverflow.com/a/44692213/2295410
    volumeMounts:
      - name: configs
        mountPath: /etc/ocis
    volumes:
      - name: configs
        configMap:
          name: proxy-config
  ocs:
    metadata:
      name: "ocs"
    labels:
      app: "ocs"
    matchLabels:
      app: "ocs"
    args: ["ocs"]
  storages:
    metadata:
      name: "storages"
    matchLabels:
      app: "storages"
    labels:
      app: "storages"
    containers:
      - name: accounts
        args: ["accounts"]
      - name: storage-frontend
        args: ["storage-frontend"]
      - name: storage-gateway
        args: ["storage-gateway"]
      - name: storage-userprovider
        args: ["storage-userprovider"]
      - name: storage-auth-basic
        args: ["storage-auth-basic"]
      - name: storage-auth-bearer
        args: ["storage-auth-bearer"]
        env:
          - name: STORAGE_OIDC_ISSUER
            value: *ingressDomain # TODO(refs) when in reverse tunnel needs to be read from a cli arg.
      - name: storage-home
        args: ["storage-home"]
        env:
          - name: "STORAGE_GATEWAY_ENDPOINT"
            value: "storages-service:9142"
          - name: "OCIS_LOG_LEVEL"
            value: "debug"
      - name: storage-users
        args: ["storage-users"]
      - name: storage-metadata
        args: ["storage-metadata"]
      - name: storage-public-link
        args: ["storage-public-link"]
  glauth:
    metadata:
      name: "glauth"
    matchLabels:
      app: "glauth"
    labels:
      app: "glauth"
    args: ["glauth"]
  settings:
    metadata:
      name: "settings"
    labels:
      app: "settings"
    matchLabels:
      app: "settings"
    args: ["settings"]
  store:
    metadata:
      name: "store"
    labels:
      app: "store"
    matchLabels:
      app: "store"
    args: ["store"]
  web:
    metadata:
      name: "web"
    labels:
      app: "web"
    matchLabels:
      app: "web"
    args: ["web"]
    env:
    - name: "WEB_UI_CONFIG_SERVER"
      value: "https://127.0.0.1:51559/"
    - name: "WEB_OIDC_METADATA_URL"
      value: "https://keycloak.ocis-keycloak.released.owncloud.works/auth/realms/oCIS/.well-known/openid-configuration"
    - name: "WEB_OIDC_AUTHORITY"
      value: "https://keycloak.ocis-keycloak.released.owncloud.works/auth/realms/oCIS/.well-known/openid-configuration"
    ports:
      values:
      - name: "http"
        containerPort: 9100
        protocol: "TCP"
  webdav:
    metadata:
      name: "webdav"
    labels:
      app: "webdav"
    matchLabels:
      app: "webdav"
    args: ["webdav"]

# set of ocis services to create kubernetes service objects.
kubeServices:
  proxy:
    name: "proxy-service"
    selector:
      app: "ocis-proxy"
    ports:
      - protocol: TCP
        port: 9200
        targetPort: 9200
    type: LoadBalancer
  glauth:
    name: "ldap-service"
    selector:
      app: "glauth"
    ports:
      - protocol: TCP
        port: 9125
        targetPort: 9125
    type: ClusterIP
  konnectd:
    name: "konnectd-service"
    selector:
      app: "konnectd"
    ports:
      - protocol: TCP
        port: 9130
        targetPort: 9130
    type: ClusterIP
  ocs:
    name: "ocs-service"
    selector:
      app: "ocs"
    ports:
      - protocol: TCP
        port: 9110
        targetPort: 9110
    type: ClusterIP
  settings:
    name: "settings-service"
    selector:
      app: "settings"
    ports:
      - protocol: TCP
        port: 9190
        targetPort: 9190
    type: ClusterIP
  storages:
    name: "storages-service"
    selector:
      app: "storages"
    ports:
    - name: "reva-auth-bearer"
      protocol: TCP
      port: 9140
      targetPort: 9140
    - name: "reva-gateway"
      protocol: TCP
      port: 9142
      targetPort: 9142
    - name: "storage-home"
      protocol: TCP
      port: 9154
      targetPort: 9154
    - name: "accounts"
      protocol: TCP
      port: 9181
      targetPort: 9181
    type: ClusterIP
  web:
    name: "web-service"
    selector:
      app: "web"
    ports:
      - protocol: TCP
        port: 9100
        targetPort: 9100
    type: ClusterIP
