---


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "ocis.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
        app: store
  replicas: 1 #TODO: scale out?
  {{- if .Values.deploymentStrategy }}
  strategy: {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
          app: store
    spec:
      containers:
        - name: store
          {{- if .Values.image.sha }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}@sha256:{{ .Values.image.sha }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["ocis"]
          args: ["store", "server"]
          env:
            - name: MICRO_REGISTRY
              value: kubernetes

            - name: STORE_LOG_COLOR
              value: "{{ $.Values.logging.color }}"
            - name: STORE_LOG_LEVEL
              value: "{{ $.Values.logging.level }}"
            - name: STORE_LOG_PRETTY
              value: "{{ $.Values.logging.pretty }}"

            - name: STORE_GRPC_ADDR
              value: 0.0.0.0:9460
          resources: {{ toYaml .Values.resources | nindent 12 }}
          ports:
          - containerPort: 9460 # GRPC
          {{- if $.Values.storageMetadata.persistence.enabled }}
          volumeMounts:
          - name: store-data
            mountPath: /var/lib/ocis
          {{ end }}
      {{- if $.Values.storageMetadata.persistence.enabled }}
      volumes:
        - name: store-data
          persistentVolumeClaim:
            claimName: store-data
      {{ end }}
