apiVersion: apps/v1
kind: Deployment
metadata:
  name: settings
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "ocis.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
        app: settings
  replicas: 1 #TODO: scale out?
  {{- if .Values.deploymentStrategy }}
  strategy: {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
          app: settings
    spec:
      {{- if $.Values.settings.persistence.enabled }}
      initContainers:
        - name: init-chown-data
          image: busybox
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "1000:1000", "/var/lib/ocis"]
          volumeMounts:
          - name: settings-data
            mountPath: /var/lib/ocis
      {{ end }}
      containers:
        - name: settings
          {{- if .Values.image.sha }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}@sha256:{{ .Values.image.sha }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["ocis"]
          args: ["settings", "server"]
          env:
            - name: MICRO_REGISTRY
              value: kubernetes

            - name: SETTINGS_LOG_COLOR
              value: "{{ $.Values.logging.color }}"
            - name: SETTINGS_LOG_LEVEL
              value: "{{ $.Values.logging.level }}"
            - name: SETTINGS_LOG_PRETTY
              value: "{{ $.Values.logging.pretty }}"

            - name: SETTINGS_HTTP_ADDR
              value: 0.0.0.0:9190
            - name: SETTINGS_GRPC_ADDR
              value: 0.0.0.0:9191

            - name: SETTINGS_JWT_SECRET
              value: "{{ $.Values.secrets.jwt }}"
          resources: {{ toYaml .Values.resources | nindent 12 }}
          ports:
          - containerPort: 9190 # HTTP
          - containerPort: 9191 # GRPC
          {{- if $.Values.settings.persistence.enabled }}
          volumeMounts:
          - name: settings-data
            mountPath: /var/lib/ocis
            # TODO: check why we loose roles after a settings restart
          {{ end }}
      {{- if $.Values.settings.persistence.enabled }}
      volumes:
        - name: settings-data
          persistentVolumeClaim:
            claimName: settings-data
      {{ end }}
